table(gss$educ, gss$sexeduc)
head(gss$educ)
tail(gss$educ)
summary(gss$educ)
table(gss$educ, gss$sexeduc)
table(gss$educ, gss$sexeduc)
plot(gss$educ, gss$sexeduc)
boxplot(gss$educ)
summary(gss$educ)
summary(gss$educ ~ gss$sexeduc)
boxplot(gss$educ ~ gss$sexeduc)
hist(gss$age)
summary(gss$age)
table(gss$educ, gss$sexeduc)
table(gss$relig, gss$sexeduc)
summary(gss$educ)
boxplot(gss$educ)
summary(gss$sexeduc)
table(gss$sexeduc)
boxplot(gss$sexeduc)
26501 / (26501 + 4170 + 9) * 100
4170 / (26501 + 4170 + 9) * 100
table(gss$educ, gss$sexeduc)
mosaicplot(table(gss$educ, gss$sexeduc))
favor = subset(gss, gss$sexeduc == "Favor")
oppose = subset(gss, gss$sexeduc == "Oppose")
ratio = favor / oppose
table(gss$educ, favor)
ratio = favor$sexeduc / oppose$sexeduc
table = table(gss$educ, gss$sexeduc)
table
table$Favor
summary(table)
gss_sub = subset(gss, gss$sexeduc == "Favor" | gss$sexeduc == "Oppose")
table = table(gss_sub$educ, gss_sub$sexeduc)
table
mosaicplot(table(gss_sub$educ, gss_sub$sexeduc))
mosaicplot(table)
table
table = table(gss$educ, gss$sexeduc)
mosaicplot(table)
table[,"Favor"]
table[,"Favor"]/table[,"oppose"]
table["Favor"]
table[,"Favor"]
table[,"Favor"]/table[,"Oppose"]
ratio = table[,"Favor"]/table[,"Oppose"]
prop.table(table)
table
prop.table(table,1)
prop.table(table,0)
prop.table(table,2)
table
table[, "Favor"|"Oppose"]
table[, "Favor"]
sub = subset(table, table[, 1:2])
table[, 1:2]
table[, table[,1]/table[,2]]
table[, 1:2]
table
ratio
ratio = table[,1]/table[,2]
ratio
ratio[3]
table
table["ratio"] <- ratio
table["ratio"] <- NA
table
sextable = table(gss$educ, gss$sexeduc)
sextable
sextable[,1:2]
sextable = sextable[,1:2]
sextable
sextable["ratio"] <- NA
View(oppose)
sextable[,"ratio"] <- sextable[,1] / sextable[,2]
sextable
sextable = table(gss$educ, gss$sexeduc)
sextable = sextable[,1:2]
sextable
sextable["ratio"] <- sextable[,1] / sextable[,2]
sextable[0:20,"ratio"] <- sextable[,1] / sextable[,2]
sextable[0:20,"ratio"] <- sextable[0:20, 1] / sextable[0:20, 2]
sextable[0:20, 1]
sextable
sextable = table(gss$educ, gss$sexeduc)
sextable = sextable[0:20, 1:2]
sextable
sextable[0:20,"ratio"] <- sextable[0:20, 1] / sextable[0:20, 2]
sextable[1:20,"ratio"] <- sextable[1:20, 1] / sextable[1:20, 2]
sextable
sextable[1:20,"ratio"] <- sextable[1:20, 1] / sextable[1:20, 2]
sextable["ratio"] <- sextable[1:20, 1] / sextable[1:20, 2]
sextable
sextable = table(gss$educ, gss$sexeduc)
sextable = sextable[0:20, 1:2]
sextable
sextable[, "ratio"] <- sextable[, 1] / sextable[, 2]
sextable
sextable[1, "ratio"] <- sextable[1, 1] / sextable[1, 2]
sextable
sextable[, c("ratio")] <- sextable[, 1] / sextable[, 2]
sextable[, c("ratio")] <- sextable[, c(1)] / sextable[, c(2)]
sextable
mosaicplot(sextable)
barplot(sextable)
mosaicplot(sextable)
barplot(gss$educ ~ gss$sexeduc)
boxplot(gss$educ ~ gss$sexeduc)
gss$educ
names(gss)
gss$educ[1:1000]
gss$educ[1, 90:1000]
gss[1:1000,8,90]
dim(gss)
gss[c("educ", "sexeduc")]
gss[1:1000, c("educ", "sexeduc")]
gss[1000:2000, c("educ", "sexeduc")]
gss[10000:11000, c("educ", "sexeduc")]
gss[50000:57000, c("educ", "sexeduc")]
fileConn<-file("output.txt")
writeLines(gss[56000:57000, c("educ", "sexeduc")], fileConn)
writeLines(c(gss[56000:57000, c("educ", "sexeduc")]), fileConn)
gss[56500:57000, c("educ", "sexeduc")]
gss[56900:57000, c("educ", "sexeduc")]
sum(dbinom(50:160, 160, .28))
pnorm(49.5, 44.8, 5.68)
pnorm(50, 44.8, 5.68)
1- 0.7960132
pnorm(3.6, 3.45, 0.163)
1 - 0.8212777
pnorm(1.73, 16, 144)
pnorm(-1.73, 16, 144)
pnorm(-1.73, 0, 144)
9.4 / sqrt(507)
qnorm(0.025)
qnorm(0.005)
qnorm(0.05)
qnorm(0.01)
2^3
(2.33*300/40)^2
17/sqrt(35)
4/2.87
qnorm(16.8)
pnorm(16.8)
pnorm(-16.8)
pnorm(-1.39)
1.96*220/sqrt(100)
415+43.12
415-43.12
pnorm(-1.73)
4 * 200
800 * 4
100 * 8
800 * 4
choose(10,8)
45*(0.13^8)*(0.87^2)
10*0.56
choose (3,2)
choose(3,1)
choose(3,0.5)
choose(3,0)
choose(3,2)
choose(3,3)
pnorm(3.6, 3.45, 0.163)
1-0.8213
qnorm(0.005)
qnorm(0.05)
(1.65*18/2)^2
6.4/2
1.74/sqrt(50)
pnorm(3.2,3,.246)
1-0.792
pnorm(118.2,100,1.083)
2/1.73
pnorm(16,14,1.57)
1-0.90
1-0.899
0.101*2
2/1.57
2/1.73
pnorm(16,14,1.156)
1-0.958
0.042*2
pnorm(50,49.5,(2/sqrt(100)))
1-0.994
pnorm(50,49.5,(2/sqrt(10000)))
1-1
4.65/sqrt(40)
pnorm(9.51, 10, 0.735)
(0.09*0.9) + (0.91*0.02)
(0.09*0.9)
0.081/0.0992
47+64
111/2
82-47
qnorm(90)
qnorm(0.05)
qnorm(0.1)
(1.28*18/4)^2
100-68
32/2
qnorm(0.05)
qnorm(0.1)
8/5
14+13
100*27/30
pnorm(0.95, 0.90, .0212)
pnorm(-0.95, 0.90, .0212)
help(pnorm)
1 - 0.9908
50*.9
50*.1
(1.96^2 * 0.5^2) / 0.03^2
pnorm(0.6, 0.5, .0112)
pnorm(-0.12, 0, .0691)
0.0412*2
download.file(url = "http://bit.ly/dasi_project_template", destfile = "dasi_project_template.Rmd")
install.packages("knitr")
library("knitr", lib.loc="C:/Users/Ahmad/Documents/R/win-library/3.0")
install.packages("swirl")
library(swirl)
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
myData <- sample(c(y, z), 100)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11,bar = 2, norf = NA)
vect
names(vect)
vext2 <- c(11, 2, NA)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[["bar"]]
vect[c("foo", "bar")]
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4, 5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
myMatrix2 <- matrix(data = myVector, nrow = 4, ncol = 5)
identical(myMatrix, myMatrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, myMatrix)
myData <- data.frame(patients, myMatrix)
myData
class(myData)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
attributes(myData)
colnames(myData) <- cnames
myData
swirl()
2 + 3
15 * 41 / 55
11.18 + 11.5 + 15 + 28
27 / 30 * 20
11.18 + 11.5 + 15 + 18
80 - 55.68
exit
getwd()
x <- 4
class(x)
x <- c(4, TRUE)
class(x)
x <- list(2, "a", "b", TRUE)
x[[1]]
x <- 1:4
y <- 2
x + y
pwd
dir
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
R.version.string
library(swirl)
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
c(1.1, 9,
| 3.14)
c(1.1, 9,3.14)
z <- c(1.1, 9,3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Ahmad")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo","bar", "norf")
identical (vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical (my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
set.seed(1)
rpois(5, 2)
rpois(5, 2)
rpois(5, 2)
set.seed(1)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
?set.seed
?ppois
?system.time
getwd()
setwd("C:/Users/Ahmad/Documents/R")
dir()
source("rankall.R")
head(rankall("heart attack", 20), 10)
warnings()
source("rankall.R")
head(rankall("heart attack", 20), 10)
warnings()
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
warnings()
df <- data.frame(Date=as.Date(character()),
File=character(),
User=character(),
stringsAsFactors=FALSE)
df
names(df)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
warnings()
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
View(df)
setwd("C:\Users\Ahmad\Dropbox\PD\Coursera R Programming\Assignments\ProgrammingAssignment2")
setwd("C:\Users\Ahmad\Dropbox\PD\Coursera R Programming\Assignments\ProgrammingAssignment2")
setwd("C:\\Users\\Ahmad\\Dropbox\\PD\\Coursera R Programming\Assignments\\ProgrammingAssignment2")
setwd("C:/Users/Ahmad/Dropbox/PD/Coursera R Programming/Assignments/ProgrammingAssignment2")
getwd()
dir()
source("cachematrix.R")
m <- matrix (1:10, 5, 2)
m
source("cachematrix.R")
m <- matrix (1:10, 5, 2)
a <- makeCacheMatrix(m)
a$get()
cacheSolve(a)
m <- matrix (1:16, 4, 4)
a <- makeCacheMatrix(m)
a$get()
cacheSolve(a)
testData <- matrix(stats::rnorm(90000), nrow=300, ncol=300)
test <- makeCacheMatrix(testData)
system.time(t1 <- cacheSolve(test))
system.time(t2 <- cacheSolve(test))
n=10
mnxn <- matrix(runif(n*n), nrow=n, ncol=n)
x <- makeCacheMatrix()
x$set(mnxn)
x$get()
cacheSolve(x)
imnxn <- cacheSolve(x)
round( mnxn %*% imnxn)
imnxn
